# https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers#running-jobs-directly-on-the-runner-machine

# Bun github-action documentation
# https://bun.sh/guides/runtime/cicd
# https://github.com/oven-sh/setup-bun

# Resources used:
# - https://medium.com/chrisrbailey/github-actions-using-postgres-postgis-and-psql-e920a2aea7e1

name: MERGED_PR::testing::ds_auth

on:
 workflow_dispatch:
 pull_request:
  types: [closed]
  branches: [main]

jobs:
 approved:
  if: github.event.pull_request.merged == true
  runs-on: ubuntu-latest
  services:
   coruscant_db:
    image: postgres
    env:
     POSTGRES_PASSWORD: password
     POSTGRES_HOST: coruscant_db
     POSTGRES_PORT: 5432
     POSTGRES_DB: disclone
     POSTGRES_USER: ds_auth
    volumes:
     - "./db/init_ds_auth.sql:/docker-entrypoint-initdb.d/1.sql"
    options: >-
     --health-cmd pg_isready
     --health-interval 10s
     --health-timeout 5s
     --health-retries 5
    ports:
     - 5432:5432
  steps:
   - name: "step 1 - copy code into the github action runner"
     uses: actions/checkout@v4
     with:
      fetch-depth: 2
     id: someid
   - name: "step 2 - setting-up bun"
     uses: oven-sh/setup-bun@v1
     with:
      bun-version: latest
   - name: "step 3 - installing dependencies"
     working-directory: "./apps/ds_auth"
     run: bun install
   - name: "step 4 - run bun test"
     working-directory: "./apps/ds_auth"
     run: bun test
env:
 # The hostname used to communicate with the PostgreSQL service container
 POSTGRES_HOST: coruscant_db
 # The default PostgreSQL port
 POSTGRES_PORT: 5432
 # the database we're talking to
 POSTGRES_DB: disclone
 # the database user running commands
 POSTGRES_USER: ds_auth
 # the password for our POSTGRES_USER
 POSTGRES_PASSWORD: password
